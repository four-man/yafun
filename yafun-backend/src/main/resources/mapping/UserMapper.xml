<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fourman.yafun.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.fourman.yafun.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="photo_url" property="photoUrl" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="register_date" property="registerDate" jdbcType="TIMESTAMP" />
    <result column="signature" property="signature" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="active_code" property="activeCode" jdbcType="VARCHAR" />
    <result column="hasActive" property="hasactive" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, sex, photo_url, email, type, register_date, signature, level, 
    active_code, hasActive
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fourman.yafun.entity.User" >
    insert into user (id, username, password, 
      sex, photo_url, email, 
      type, register_date, signature, 
      level, active_code, hasActive
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{photoUrl,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{registerDate,jdbcType=TIMESTAMP}, #{signature,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{activeCode,jdbcType=VARCHAR}, #{hasactive,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fourman.yafun.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="photoUrl != null" >
        photo_url,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="registerDate != null" >
        register_date,
      </if>
      <if test="signature != null" >
        signature,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="activeCode != null" >
        active_code,
      </if>
      <if test="hasactive != null" >
        hasActive,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="photoUrl != null" >
        #{photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="registerDate != null" >
        #{registerDate,jdbcType=TIMESTAMP},
      </if>
      <if test="signature != null" >
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="activeCode != null" >
        #{activeCode,jdbcType=VARCHAR},
      </if>
      <if test="hasactive != null" >
        #{hasactive,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fourman.yafun.entity.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="photoUrl != null" >
        photo_url = #{photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="registerDate != null" >
        register_date = #{registerDate,jdbcType=TIMESTAMP},
      </if>
      <if test="signature != null" >
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="activeCode != null" >
        active_code = #{activeCode,jdbcType=VARCHAR},
      </if>
      <if test="hasactive != null" >
        hasActive = #{hasactive,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fourman.yafun.entity.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      photo_url = #{photoUrl,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      register_date = #{registerDate,jdbcType=TIMESTAMP},
      signature = #{signature,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      active_code = #{activeCode,jdbcType=VARCHAR},
      hasActive = #{hasactive,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>